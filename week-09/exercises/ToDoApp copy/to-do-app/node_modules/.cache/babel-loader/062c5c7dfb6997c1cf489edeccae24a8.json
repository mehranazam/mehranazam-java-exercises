{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport Heading from \"./Heading\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport { useState } from \"react\";\n\nfunction App() {\n  _s();\n\n  const [toDo, setToDo] = useState([]);\n\n  function buttonHandler() {\n    setToDo(todoapp.toDo);\n  }\n\n  function deleteToDo(id) {\n    let newToDoArray = [...toDo];\n    setToDo(newToDoArray.filter(toDo => toDo.id !== id));\n  }\n\n  function addToDo(toDoNum, e) {\n    e.preventDefault();\n    let newToDoArray = [...toDo];\n    let foundToDo;\n  }\n}\n\n_s(App, \"bYtYTvERdMLyyNXt9SKvIh5omN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/moinulazam/mehranazam-java-exercises/week-08/ToDoApp/to-do-app/src/App.js"],"names":["Heading","Container","Form","List","useState","App","toDo","setToDo","buttonHandler","todoapp","deleteToDo","id","newToDoArray","filter","addToDo","toDoNum","e","preventDefault","foundToDo"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASI,aAAT,GAAyB;AACvBD,IAAAA,OAAO,CAACE,OAAO,CAACH,IAAT,CAAP;AACD;;AAED,WAASI,UAAT,CAAoBC,EAApB,EAAwB;AACtB,QAAIC,YAAY,GAAG,CAAC,GAAGN,IAAJ,CAAnB;AACAC,IAAAA,OAAO,CAACK,YAAY,CAACC,MAAb,CAAqBP,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYA,EAA1C,CAAD,CAAP;AACD;;AAED,WAASG,OAAT,CAAiBC,OAAjB,EAA0BC,CAA1B,EAA6B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIL,YAAY,GAAG,CAAC,GAAGN,IAAJ,CAAnB;AACA,QAAIY,SAAJ;AACD;AACF;;GAjBQb,G;;KAAAA,G;AAmBT,eAAeA,GAAf","sourcesContent":["import Heading from \"./Heading\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n\n  function buttonHandler() {\n    setToDo(todoapp.toDo);\n  }\n\n  function deleteToDo(id) {\n    let newToDoArray = [...toDo];\n    setToDo(newToDoArray.filter((toDo) => toDo.id !== id));\n  }\n\n  function addToDo(toDoNum, e) {\n    e.preventDefault();\n    let newToDoArray = [...toDo];\n    let foundToDo;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}