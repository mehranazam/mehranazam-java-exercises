{"ast":null,"code":"var _jsxFileName = \"/Users/moinulazam/mehranazam-java-exercises/week-09/bug-safari-jwt-client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    userStatus\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"http://localhost:8080/authenticate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }); // This code executes if the request is successful\n\n    if (response.status === 200) {\n      const {\n        jwt_token\n      } = await response.json();\n      console.log(jwt_token);\n      history.push(\"/\");\n    } else if (response.status === 400) {\n      const errors = await response.json();\n      setErrors(errors);\n    } else if (response.status === 403) {\n      setErrors([\"Login failed.\"]);\n    } else {\n      setErrors([\"Unknown error.\"]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), errors.map((error, i) => /*#__PURE__*/_jsxDEV(Error, {\n      msg: error\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"XrpOXtelBltjiXX9g6uBW4WwERQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/moinulazam/mehranazam-java-exercises/week-09/bug-safari-jwt-client/src/components/Login.js"],"names":["React","useState","Link","useHistory","Error","Login","userStatus","username","setUsername","password","setPassword","errors","setErrors","history","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","jwt_token","json","console","log","push","map","error","i","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Error from \"./Error\";\n\nfunction Login({ userStatus }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const response = await fetch(\"http://localhost:8080/authenticate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    // This code executes if the request is successful\n    if (response.status === 200) {\n      const { jwt_token } = await response.json();\n\n      console.log(jwt_token);\n      history.push(\"/\");\n    } else if (response.status === 400) {\n      const errors = await response.json();\n      setErrors(errors);\n    } else if (response.status === 403) {\n      setErrors([\"Login failed.\"]);\n    } else {\n      setErrors([\"Unknown error.\"]);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n\n      {errors.map((error, i) => (\n        <Error key={i} msg={error} />\n      ))}\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}